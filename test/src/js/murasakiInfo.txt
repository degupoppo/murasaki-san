
<!--- ########################################################################## --->

<!--- Show informations of Murasaki-san --->
<!--- Copy and pasete these codes in html file. --->

<div id="output_murasakiInfo">
    <button style="height:28px;font-size:80%" onclick="show_murasakiInfo();">
        &nbsp;<b>Hello Murasaki-san!</b>&nbsp;
    </button>
</div>

<script>
    async function show_murasakiInfo() {

        let _target = document.getElementById("output_murasakiInfo");
        let _text = "";

        //loading
        _text = '&nbsp;&nbsp;&nbsp;<b>Loading...</b>';
        _target.innerHTML = _text;
        
        //get web3
        let web3 = await new Web3(window.ethereum);
        await window.ethereum.request({method: 'eth_requestAccounts'});

        //get wallet
        let _wallets = await web3.eth.getAccounts();
        let wallet = _wallets[0];
        
        //prepare contract
        let _abi = [{'anonymous': false, 'inputs': [{'indexed': true, 'internalType': 'address', 'name': 'previousOwner', 'type': 'address'}, {'indexed': true, 'internalType': 'address', 'name': 'newOwner', 'type': 'address'}], 'name': 'OwnershipTransferred', 'type': 'event'}, {'inputs': [{'internalType': 'address', 'name': '_address', 'type': 'address'}], 'name': '_set_Murasaki_Address', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, {'inputs': [], 'name': 'address_Murasaki_Address', 'outputs': [{'internalType': 'address', 'name': '', 'type': 'address'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'age', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'birthplace', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'character', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'city', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'class', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'coin', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'countOf_achievement', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'dexterity', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'dexterity_withItems', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'exp', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'flower', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'happy', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'inHouse', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'intelligence', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'intelligence_withItems', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'isActive', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'level', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'luck', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'luck_withItems', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'luck_withItems_withDice', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'material', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'name', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'not_petrified', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [], 'name': 'owner', 'outputs': [{'internalType': 'address', 'name': '', 'type': 'address'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'personality', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'precious', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [], 'name': 'renounceOwnership', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'satiety', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'scent', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'score', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'scoreOf_achievement_onChain', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'street', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'strength', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'strength_withItems', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'summoner', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'total_coin_mined', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'total_exp_gained', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'total_item_crafted', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'total_material_farmed', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'total_precious_received', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': 'newOwner', 'type': 'address'}], 'name': 'transferOwnership', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, {'inputs': [{'internalType': 'address', 'name': '_wallet', 'type': 'address'}], 'name': 'weakpoint', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}];
        let _address = "0x1525983482727b079C54dB04b95fB7BB3D1c90c5";
        let contract = new web3.eth.Contract(_abi, _address);

        //get summoner
        let _summoner = await contract.methods.summoner(wallet).call();
        
        //check summoner

        //when token not possess
        if (_summoner == 0) {
            _text = "";
            _text += "&nbsp;&nbsp;&nbsp;";
            _text += "You have not summoned your Murasaki-san yet.";
        
        //when token possess
        } else {
        
            //prepare info
            let _character = await contract.methods.character(wallet).call();
            let _personality = await contract.methods.personality(wallet).call();
            let _weakpoint = await contract.methods.weakpoint(wallet).call();
            let _name = await contract.methods.name(wallet).call();
            if (_name == "") {
                _name = "#" + _summoner;
            }
            let _birthplace = await contract.methods.birthplace(wallet).call();
            let _flower = await contract.methods.flower(wallet).call();
            let _street = await contract.methods.street(wallet).call();
            let _city = await contract.methods.city(wallet).call();
            let _age = await contract.methods.age(wallet).call();
            _age = Math.floor(_age / 86400);
            let _str = await contract.methods.strength(wallet).call();
            _str /= 100;
            let _total_material_farmed = await contract.methods.total_material_farmed(wallet).call();
            let _total_item_crafted = await contract.methods.total_item_crafted(wallet).call();
            //let _total_metSummoners = await contract.methods.total_metSummoners(wallet).call();
            let _total_metSummoners = 0;
            let _score = await contract.methods.score(wallet).call();

            //prepare text
            _text = "";
            _text += "&nbsp;&nbsp;&nbsp;";
            _text += "You are the owner of a <b><font color='#ff7f50'>";
            _text += _character;
            _text += "</font></b>, <b><font color='#ff4500'>";
            _text += _personality;
            _text += "</font></b>, but <b><font color='#ff0000'>";
            _text += _weakpoint;
            _text += "</font></b> <b><font color='#ff1493'>";
            _text += _name;
            _text += "</font></b>. <b><font color='#ff1493'>";
            _text += _name;
            _text += "</font></b> was born from a <b><font color='#008080 '>";
            _text += _birthplace;
            _text += "</font></b> with <b><font color='#006400'>";
            _text += _flower;
            _text += "</font></b> and currently resides on <b><font color='#8a2be2'>";
            _text += _street;
            _text += "</font></b> in <b><font color='#800080'>";
            _text += _city;
            _text += "</font></b>. At <b><font color='blue'>";
            _text += _age;
            _text += " days</font></b> old, <b><font color='#ff1493'>";
            _text += _name;
            _text += "</font></b> has earned <b><font color='blue'>";
            _text += _str;
            _text += " STR</font></b> status, farmed a total of <b><font color='blue'>";
            _text += _total_material_farmed;
            _text += " leaves</font></b>, crafted <b><font color='blue'>";
            _text += _total_item_crafted;
            _text += " items</font></b>, and made <b><font color='blue'>";
            _text += _total_metSummoners;
            _text += " friends</font></b> while strolling. The current comfort score of the <b><font color='#ff1493'>house of ";
            _text += _name;
            _text += "</font></b> is <b><font color='#ffa500'>";
            _text += _score;
            _text += "</font></b>.<br>";
        }
        
        //override html
        _target.innerHTML = _text;
    }
</script>

<!--- ########################################################################## --->
